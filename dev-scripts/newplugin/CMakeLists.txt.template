#set lname = $name.lower()
#set uname = $name.upper()
#set tname = 'webexplugin_' + $lname
#set binp = "${CMAKE_CURRENT_BINARY_DIR}/"
#set src = $lname + '_plugin_SRCS'
#set evalsrc = "${"+$src+"}"

project($tname)
cmake_minimum_required(VERSION 2.6)

set (QT_MIN_VERSION "4.6.0")
set (QT_USE_QTNETWORK true)


find_package(KDE4  REQUIRED)
find_package(Nepomuk REQUIRED)

#raw
# check for required packages
if(WEBEXTRACTOR_VERSION_STRING)
    # if WEBEXTRACTOR_VERSION_STRING is defined, we are compiling the meta-package
    set(LIBWEBEXTRACTOR_INCLUDE_DIRS
        ../libwebextractor/include
        ${CMAKE_CURRENT_BINARY_DIR}/../libwebextractor/include)
    set(LIBWEBEXTRACTOR_LIBRARIES webextractor)
else(WEBEXTRACTOR_VERSION_STRING)
    find_package(LibWebextractor REQUIRED)
endif(WEBEXTRACTOR_VERSION_STRING)


include_directories(
  ${SOPRANO_INCLUDE_DIR}
  ${CMAKE_SOURCE_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${NEPOMUK_INCLUDE_DIR}
  ${CMAKE_CURRENT_BINARY_DIR}
  ${KDE4_INCLUDES}
  ${LIBWEBEXTRACTOR_INCLUDE_DIRS}
  )


link_directories(${LIBWEBEXTRACTOR_LIBRARY_DIRS})
#end raw

set (${src}
    ${lname}plugin.cpp
    ${lname}datappreply.cpp
    ${lname}datapp.cpp
    )

set (${uname}_PLUGIN_VERSION $version)
set (${uname}_PLUGIN_INTERNAL_VERSION $internal_version)

configure_file(${lname}plugin_config.h.in ${binp}${lname}plugin_config.h  )

#raw
include_directories(
    ${CMAKE_CURRENT_BINARY_DIR}
    )
#end raw

kde4_add_plugin(${tname} ${evalsrc})

target_link_libraries( ${tname}
#raw
    ${LIBWEBEXTRACTOR_LIBRARIES}
    webexplugin
    ${NEPOMUK_LIBRARIES}
    ${KDE4_NEPOMUK_LIBS}
    ${QT_LIBRARIES}
    )
#end raw

install(
  TARGETS ${tname}
#raw
  DESTINATION ${PLUGIN_INSTALL_DIR}
  )
#end raw

install(
  FILES ${tname}.desktop
#raw
  DESTINATION ${SERVICES_INSTALL_DIR}
  )
#end raw


