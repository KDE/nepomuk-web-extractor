/*
   Copyright (C) $year  by $author <$mail>

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */


#set lname = $name.lower()
#set classname = $name + 'Reply'

#raw 
#ifndef #end raw __webextractor_datappreply_${lname}_h_
#raw 
#define #end raw __webextractor_datappreply_${lname}_h_

#if $use_simple
#raw
#include "simpleexecutivereply.h"
#end raw
#else
#raw
#include "executivereply.h"
#end raw
#end if


namespace Nepomuk  {
    namespace Decision {
        class DecisionFactory;
    }
    class ${name}Executive;
    class Resource;
    // Usually ( if you don't choose another design ) this
    // is the class where all extracting stuff is done.
    // Source file provides more explanation and advices. Or look
    // for tutorials
#if $use_simple
    class $classname : public WebExtractor::SimpleExecutiveReply
#else
    class $classname : public WebExtractor::ExecutiveReply
#end if
    {
    Q_OBJECT
    public:
        ${classname}(${name}Executive * parent, const Decision::DecisionFactory * factory, const Nepomuk::Resource & res );
                // Abort your execution.
                virtual void abort() ;
                // It is up to you to decide is reply is valid or not.
                // If it is not, it will be rejected. 
                virtual bool isValid() const ;
                // If you subclassed 'SimpleExecutiveReply', you will
                // have a method called 'decisions() that you should 
                // not reimplement as it provides nice functions.
                // If you didn't subclass SimpleExecutiveReply, then
                // you have to implement this method. It must returl 
                // list of all Decisions you have created
#if not $use_simple
                virtual WebExtractor::DecisionList decisions() const;
#end if

    };
}

#raw 
#endif #end raw

