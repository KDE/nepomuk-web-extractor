/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -p decisionmanagementserviceproxy -i protocol_types.h ../interfaces/org.kde.nepomuk.DecisionManagementService.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DECISIONMANAGEMENTSERVICEPROXY_H_1310141726
#define DECISIONMANAGEMENTSERVICEPROXY_H_1310141726

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "protocol_types.h"

/*
 * Proxy class for interface org.kde.nepomuk.DecisionManagement
 */
class OrgKdeNepomukDecisionManagementInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.nepomuk.DecisionManagement"; }

public:
    OrgKdeNepomukDecisionManagementInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgKdeNepomukDecisionManagementInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<IdAndError> addDecision(const QByteArray &decision)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(decision);
        return asyncCallWithArgumentList(QLatin1String("addDecision"), argumentList);
    }

    inline QDBusPendingReply<MetadataAndError> decisionMetadata(int id)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(id);
        return asyncCallWithArgumentList(QLatin1String("decisionMetadata"), argumentList);
    }

    inline QDBusPendingReply<bool> existsDecision(int id)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(id);
        return asyncCallWithArgumentList(QLatin1String("existsDecision"), argumentList);
    }

    inline QDBusPendingReply<IdList> getDecisions(const QString &uri)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(uri);
        return asyncCallWithArgumentList(QLatin1String("getDecisions"), argumentList);
    }

    inline QDBusPendingReply<int> removeDecision(int id)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(id);
        return asyncCallWithArgumentList(QLatin1String("removeDecision"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace kde {
    namespace nepomuk {
      typedef ::OrgKdeNepomukDecisionManagementInterface DecisionManagement;
    }
  }
}
#endif
